{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["loadingHTML","style","position","backgroundColor","top","left","bottom","right","width","height","transform","border","borderTop","borderRadius","animation","App","useState","users","setUsers","loading","setLoading","expanded","setExpanded","a","fetch","json","data","className","onClick","getUsers","map","user","alt","first_name","src","avatar","last_name","email","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAGMA,EACJ,qBACEC,MAAO,CACLC,SAAU,QACVC,gBAAiB,qBACjBC,IAAK,IACLC,KAAM,IACNC,OAAQ,IACRC,MAAO,KAPX,SAUE,qBACEN,MAAO,CACLO,MAAO,OACPC,OAAQ,OACRL,IAAK,MACLC,KAAM,MACNH,SAAU,WACVQ,UAAW,sBACXC,OAAQ,oBACRC,UAAW,wBACXC,aAAc,MACdC,UAAW,mCAiDJC,MA3Cf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,oBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAAgCJ,oBAAS,GAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KAHa,4CAKb,4BAAAC,EAAA,6DACEL,EAAS,IACTE,GAAW,GAFb,SAG6BI,MAAM,sCAHnC,8BAG0EC,OAH1E,OAGQC,EAHR,OAGkFA,KAChFJ,GAAY,GACZF,GAAW,GACXF,EAASQ,GANX,6CALa,sBAcb,OACE,sBAAKC,UAAU,MAAf,UACE,qBAAKA,UAAS,aAAQN,EAAW,gBAAkB,IAAnD,SACE,gCACE,6DACA,qBAAKM,UAAU,UAAf,oBACA,wBAAQC,QAAS,kBApBZ,0CAoBkBC,IAAvB,4BAGJ,qBAAKF,UAAU,YAAf,SACGV,EAAMa,KAAI,SAAAC,GACT,OACE,gCACE,qBAAKJ,UAAU,SAAf,SACE,qBAAKK,IAAKD,EAAKE,WAAYC,IAAKH,EAAKI,WAEvC,sBAAKR,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,SAA4BI,EAAKE,WAAa,IAAMF,EAAKK,YACzD,qBAAKT,UAAU,aAAf,SAA6BI,EAAKM,aAN5BN,EAAKO,UAYR,IAAZnB,GAAoBnB,MCzDZuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.734d19ca.chunk.js","sourcesContent":["import { useState } from 'react';\nimport './App.css';\n\nconst loadingHTML = (\n  <div\n    style={{\n      position: 'fixed',\n      backgroundColor: 'rgba(0, 0, 0, 0.5)',\n      top: '0',\n      left: '0',\n      bottom: '0',\n      right: '0',\n    }}\n  >\n    <div\n      style={{\n        width: '50px',\n        height: '50px',\n        top: '50%',\n        left: '50%',\n        position: 'absolute',\n        transform: 'translate(50%, 50%)',\n        border: '3px solid #fb5b53',\n        borderTop: '3px solid transparent',\n        borderRadius: '50%',\n        animation: 'spin .5s linear 0s infinite',\n      }}\n    ></div>\n  </div>\n);\n\nfunction App() {\n  const [users, setUsers] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [expanded, setExpanded] = useState(true);\n\n  async function getUsers() {\n    setUsers([]);\n    setLoading(true);\n    const data = (await (await fetch('https://reqres.in/api/users?page=1')).json()).data;\n    setExpanded(false);\n    setLoading(false);\n    setUsers(data);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className={`nav${expanded ? ' nav_expanded' : ''}`}>\n        <div>\n          <div>Let's Grow More Internship</div>\n          <div className=\"no-warp\">Task 2</div>\n          <button onClick={() => getUsers()}>Get Users</button>\n        </div>\n      </div>\n      <div className=\"all_users\">\n        {users.map(user => {\n          return (\n            <div key={user.id}>\n              <div className=\"avator\">\n                <img alt={user.first_name} src={user.avatar}></img>\n              </div>\n              <div className=\"user_details\">\n                <div className=\"user_name\">{user.first_name + ' ' + user.last_name}</div>\n                <div className=\"user_email\">{user.email}</div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      {loading === true && loadingHTML}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}